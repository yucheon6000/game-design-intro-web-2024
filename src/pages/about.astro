---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import PageTitie from "../components/PageTitie.astro";
import Menu from "../components/Menu.astro";
import YellowSmallTitle from "../components/YellowSmallTitle.astro";
import BlackSmallTitle from "../components/BlackSmallTitle.astro";
import Congrats from "../components/Congrats.astro";
import RoundedContainerForAbout from "../components/RoundedContainerForAbout.astro";
import Profile from "../components/Profile.astro";
import ProfileWithoutInfo from "../components/ProfileWithoutInfo.astro";
import DefaultText from "../components/DefaultText.astro";

const allProfs = ["경병표", "유석호", "이동열", "이완복", "이동엽", "이종호",
                    "고정운", "김남재", "최정화", "최홍준", "김정석", "김예은", "김희종"]; // prettier-ignore
const allStudents = ["강성혁", "강주희", "강준안", "권태서", "김가은", "김도경", "김민욱", "김민지", "김사빈", "김수진", "김지수", "김하나", "니콘스탄틴", "박시원", "박유천", "박정원", "박희경", "설재석", "송은선", "안경은", "안세빈", "양정인", "이국동", "이상훈", "이성래", "이신웅", "이지원", "장서영", "장윤우", "장현정", "정다솜", "주하연", "진현지", "최미선", "함동욱"]; // prettier-ignore
var studentToGame: any = {};
for (let stud of allStudents) studentToGame[stud] = [];

const allGames = await Astro.glob("./project/*.md");
allGames.sort((game1, game2) =>
    game1.frontmatter.title.localeCompare(game2.frontmatter.title),
);

for (let game of allGames) {
    for (let name of game.frontmatter.profileNames) {
        if (studentToGame.hasOwnProperty(name))
            studentToGame[name].push({
                title: game.frontmatter.title,
                url: game.url,
            });
    }
}
---

<Layout>
    <link
        rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
    />

    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"
    ></script>
    <Menu />
    <PageTitie title="ABOUT" subtitle="졸업전시회" />
    <main>
        <!-- 전시 소개 -->
        <YellowSmallTitle>About Exhibition</YellowSmallTitle>
        <BlackSmallTitle>전시 소개</BlackSmallTitle>

        <div class="poster-and-description end-block">
            <img class="poster" src="/2024/image/exhibition-poster.png" />

            <div class="description">
                <h1><strong>TUTORIAL</strong></h1>
                <h5>
                    <strong
                        >국립공주대학교 게임디자인학과 제20회 졸업전시회</strong
                    >
                </h5>
                <br />

                국립공주대학교 게임디자인학과 제20회 졸업전시회
                <strong>TUTORIAL</strong>을 부산 G-Star에서 개최합니다.

                <br /><br />
                졸업을 앞둔 4학년 학생들이 약 일 년간 준비한 게임 12작품을 전시합니다.

                <br /><br />
                새로운 게임을 시작하기 전, 튜토리얼은 우리에게 이 게임을 어떻게 진행해야
                할지 알려줍니다.

                <br /><br />
                게임디자인학과에서의 4년은 우리 35명에게 튜토리얼이었습니다.
                <br />
                이제는 진짜 게임을 시작해 보려고 합니다.

                <br /><br />
                G-Star에 방문하셔서 재밌는 게임을 즐겨주시고, 앞으로 나아갈 학생들을
                힘껏 응원해 주세요!
            </div>
        </div>

        <!-- 전시 소개 영상 -->
        <RoundedContainerForAbout useBackgroundColor rightRound>
            <YellowSmallTitle>Exhibition Introduction Video</YellowSmallTitle>
            <BlackSmallTitle color="white">전시 소개 영상</BlackSmallTitle>
            <iframe
                class="video end-block"
                width="560"
                height="315"
                src="https://www.youtube.com/embed/3LmzoafzORc"
                title="YouTube video player"
                frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                referrerpolicy="strict-origin-when-cross-origin"
                allowfullscreen></iframe>
        </RoundedContainerForAbout>

        <div class="pull">
            <RoundedContainerForAbout leftRound>
                <YellowSmallTitle>Professors</YellowSmallTitle>
                <BlackSmallTitle>교수</BlackSmallTitle>

                <div class="profile-group end-block">
                    {allProfs.map((name) => <ProfileWithoutInfo name={name} />)}
                </div>

                <YellowSmallTitle>Students</YellowSmallTitle>
                <BlackSmallTitle>학생</BlackSmallTitle>

                <div class="profile-group end-block">
                    {
                        allStudents.map((name) => {
                            let games = studentToGame[name];
                            let index = Math.floor(
                                Math.random() * games.length,
                            );
                            let game = games[index];

                            return (
                                <ProfileWithoutInfo
                                    name={name}
                                    gameTitle={game.title}
                                    url={game.url}
                                />
                            );
                        })
                    }
                </div>
            </RoundedContainerForAbout>
        </div>
    </main>
</Layout>

<link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css"
/>
<script
    is:inline
    src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>

<script is:inline>
    new Swiper(".mySwiper", {
        centeredSlides: true,
        autoplay: {
            delay: 5000,
            disableOnInteraction: false,
        },
        pagination: {
            el: ".swiper-pagination",
            clickable: true,
        },
    });
</script>

<style>
    .poster-and-description {
        width: 100%;
        display: flex;
        flex-direction: row;
        column-gap: 50px;
    }

    .poster {
        border-radius: 10px;
    }

    .poster,
    .description {
        flex: 1;
        max-width: calc(
            50% - 25px
        ); /* 양쪽 여백을 고려해 이미지의 최대 너비 설정 */
        height: auto; /* 이미지 비율 유지 */
    }

    @media (width <= 1000px) {
        .poster-and-description {
            flex-direction: column;
            align-items: center;
            column-gap: 0;
        }

        .poster {
            flex: 0 0 auto;
            max-width: calc(100% - 70px);
            margin-bottom: 30px;
        }

        .description {
            max-width: 100%;
            font-weight: 400;
            font-size: 1.125rem;
            line-height: 2rem;
        }
    }

    .profile-group {
        display: flex;
        flex-wrap: wrap;
        column-gap: 1rem; /*  자식 요소들 간의 가로 간격 설정 */
        row-gap: 1.5rem;
        justify-content: flex-start; /* 요소들을 왼쪽 정렬 */
    }
</style>
